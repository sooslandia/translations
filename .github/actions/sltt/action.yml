name: SLTT
description: 'Run the sooslandia translation tool'

inputs:
  sltt_arguments:
    description: 'Command line sltt arguments'
    required: true
  projects_dir:
    description: 'Root of the projects directory'
    required: true
  email_address:
    description: 'Email address for PO templates metadata'
    required: true
  base_commit_sha:
    description: 'Base commit for detecting changes'
    required: true
  github_token:
    description: 'Token for working with private repos (if pull or push mode is used)'
    required: false
  fail_on_errors:
    description: 'Fail the action if sltt-errors.txt was generated by sltt.'
    required: false
    default: 'false'

outputs:
  sltt-log-url:
    description: "SLTT log URL"
    value: ${{ steps.upload-sltt-log.outputs.artifact-url }}
  sltt-errors-url:
    description: "SLTT errors URL"
    value: ${{ steps.upload-sltt-errors.outputs.artifact-url }}

runs:
  using: "composite"
  steps:
  - name: Setup python
    uses: actions/setup-python@v5
    with:
      python-version: '3.12'
  - name: Install dependencies
    shell: bash
    run: |
      set -e
      curl -LsSf https://astral.sh/uv/install.sh | sh
      uv sync
      tar xzf mdpo-files/wheels.tar.gz
      uv pip install wheels/*.whl
      rm -rf wheels
      curl -Lo pandoc.deb https://github.com/jgm/pandoc/releases/download/3.2/pandoc-3.2-1-amd64.deb
      sudo dpkg -i pandoc.deb
  - name: run sltt
    env:
      REPOSITORY_DIR: '.'
      GITHUB_TOKEN: ${{ inputs.github_token }}
      PROJECTS_DIR: ${{ inputs.projects_dir }}
      EMAIL_ADDRESS: ${{ inputs.email_address }}
      BASE_COMMIT_SHA: ${{ inputs.base_commit_sha }}
    shell: bash
    run: |
      .venv/bin/python3 -m sltt ${{ inputs.sltt_arguments }}
  - name: Upload errors
    id: 'upload-sltt-errors'
    uses: actions/upload-artifact@v4
    with:
      name: 'sltt-errors'
      path: 'sltt-errors.txt'
      if-no-files-found: ignore
  - name: Upload log
    id: 'upload-sltt-log'
    if: '${{ !cancelled() }}'
    uses: actions/upload-artifact@v4
    with:
      name: sltt-log
      path: 'sltt-log.log'
  - name: fail on errors
    if: ${{ inputs.fail_on_errors == 'true' }}
    shell: 'bash'
    run: '[[ ! -f sltt-errors.txt ]]'
  - name: check errors
    shell: 'bash'
    run: |
      if [[ -f sltt-errors.txt ]]; then
        echo "::warning::Errors was generated by sltt"
      fi
